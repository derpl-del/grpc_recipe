// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: recipe/recipepb/recipe.proto

package recipepb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Recipe struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId    string   `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Title       string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Ingredients []string `protobuf:"bytes,4,rep,name=ingredients,proto3" json:"ingredients,omitempty"`
	Procedures  []string `protobuf:"bytes,5,rep,name=procedures,proto3" json:"procedures,omitempty"`
}

func (x *Recipe) Reset() {
	*x = Recipe{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Recipe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Recipe) ProtoMessage() {}

func (x *Recipe) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Recipe.ProtoReflect.Descriptor instead.
func (*Recipe) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{0}
}

func (x *Recipe) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Recipe) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Recipe) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Recipe) GetIngredients() []string {
	if x != nil {
		return x.Ingredients
	}
	return nil
}

func (x *Recipe) GetProcedures() []string {
	if x != nil {
		return x.Procedures
	}
	return nil
}

type CreateRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=recipe,proto3" json:"recipe,omitempty"`
}

func (x *CreateRecipeRequest) Reset() {
	*x = CreateRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecipeRequest) ProtoMessage() {}

func (x *CreateRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecipeRequest.ProtoReflect.Descriptor instead.
func (*CreateRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRecipeRequest) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type CreateRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=Recipe,proto3" json:"Recipe,omitempty"` // will have a blog id
}

func (x *CreateRecipeResponse) Reset() {
	*x = CreateRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecipeResponse) ProtoMessage() {}

func (x *CreateRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecipeResponse.ProtoReflect.Descriptor instead.
func (*CreateRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type QueryRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QueryRecipeRequest) Reset() {
	*x = QueryRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecipeRequest) ProtoMessage() {}

func (x *QueryRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecipeRequest.ProtoReflect.Descriptor instead.
func (*QueryRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{3}
}

func (x *QueryRecipeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QueryRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=Recipe,proto3" json:"Recipe,omitempty"`
}

func (x *QueryRecipeResponse) Reset() {
	*x = QueryRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecipeResponse) ProtoMessage() {}

func (x *QueryRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecipeResponse.ProtoReflect.Descriptor instead.
func (*QueryRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{4}
}

func (x *QueryRecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type UpdateRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=Recipe,proto3" json:"Recipe,omitempty"`
}

func (x *UpdateRecipeRequest) Reset() {
	*x = UpdateRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecipeRequest) ProtoMessage() {}

func (x *UpdateRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecipeRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateRecipeRequest) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type UpdateRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recipe *Recipe `protobuf:"bytes,1,opt,name=Recipe,proto3" json:"Recipe,omitempty"`
}

func (x *UpdateRecipeResponse) Reset() {
	*x = UpdateRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecipeResponse) ProtoMessage() {}

func (x *UpdateRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecipeResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateRecipeResponse) GetRecipe() *Recipe {
	if x != nil {
		return x.Recipe
	}
	return nil
}

type DeleteRecipeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRecipeRequest) Reset() {
	*x = DeleteRecipeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeRequest) ProtoMessage() {}

func (x *DeleteRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecipeRequest) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteRecipeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteRecipeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRecipeResponse) Reset() {
	*x = DeleteRecipeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_recipe_recipepb_recipe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecipeResponse) ProtoMessage() {}

func (x *DeleteRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_recipe_recipepb_recipe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecipeResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecipeResponse) Descriptor() ([]byte, []int) {
	return file_recipe_recipepb_recipe_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteRecipeResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_recipe_recipepb_recipe_proto protoreflect.FileDescriptor

var file_recipe_recipepb_recipe_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x70,
	0x62, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x64, 0x69, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x06, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x13, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69,
	0x70, 0x65, 0x52, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x52, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x14, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x52, 0x06, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xb8, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x1b, 0x2e,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12, 0x1b, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70,
	0x65, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x2f,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_recipe_recipepb_recipe_proto_rawDescOnce sync.Once
	file_recipe_recipepb_recipe_proto_rawDescData = file_recipe_recipepb_recipe_proto_rawDesc
)

func file_recipe_recipepb_recipe_proto_rawDescGZIP() []byte {
	file_recipe_recipepb_recipe_proto_rawDescOnce.Do(func() {
		file_recipe_recipepb_recipe_proto_rawDescData = protoimpl.X.CompressGZIP(file_recipe_recipepb_recipe_proto_rawDescData)
	})
	return file_recipe_recipepb_recipe_proto_rawDescData
}

var file_recipe_recipepb_recipe_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_recipe_recipepb_recipe_proto_goTypes = []interface{}{
	(*Recipe)(nil),               // 0: recipe.Recipe
	(*CreateRecipeRequest)(nil),  // 1: recipe.CreateRecipeRequest
	(*CreateRecipeResponse)(nil), // 2: recipe.CreateRecipeResponse
	(*QueryRecipeRequest)(nil),   // 3: recipe.QueryRecipeRequest
	(*QueryRecipeResponse)(nil),  // 4: recipe.QueryRecipeResponse
	(*UpdateRecipeRequest)(nil),  // 5: recipe.UpdateRecipeRequest
	(*UpdateRecipeResponse)(nil), // 6: recipe.UpdateRecipeResponse
	(*DeleteRecipeRequest)(nil),  // 7: recipe.DeleteRecipeRequest
	(*DeleteRecipeResponse)(nil), // 8: recipe.DeleteRecipeResponse
}
var file_recipe_recipepb_recipe_proto_depIdxs = []int32{
	0, // 0: recipe.CreateRecipeRequest.recipe:type_name -> recipe.Recipe
	0, // 1: recipe.CreateRecipeResponse.Recipe:type_name -> recipe.Recipe
	0, // 2: recipe.QueryRecipeResponse.Recipe:type_name -> recipe.Recipe
	0, // 3: recipe.UpdateRecipeRequest.Recipe:type_name -> recipe.Recipe
	0, // 4: recipe.UpdateRecipeResponse.Recipe:type_name -> recipe.Recipe
	1, // 5: recipe.RecipeService.CreateRecipe:input_type -> recipe.CreateRecipeRequest
	3, // 6: recipe.RecipeService.QueryRecipe:input_type -> recipe.QueryRecipeRequest
	5, // 7: recipe.RecipeService.UpdateRecipe:input_type -> recipe.UpdateRecipeRequest
	7, // 8: recipe.RecipeService.DeleteRecipe:input_type -> recipe.DeleteRecipeRequest
	2, // 9: recipe.RecipeService.CreateRecipe:output_type -> recipe.CreateRecipeResponse
	4, // 10: recipe.RecipeService.QueryRecipe:output_type -> recipe.QueryRecipeResponse
	6, // 11: recipe.RecipeService.UpdateRecipe:output_type -> recipe.UpdateRecipeResponse
	8, // 12: recipe.RecipeService.DeleteRecipe:output_type -> recipe.DeleteRecipeResponse
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_recipe_recipepb_recipe_proto_init() }
func file_recipe_recipepb_recipe_proto_init() {
	if File_recipe_recipepb_recipe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_recipe_recipepb_recipe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Recipe); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_recipe_recipepb_recipe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRecipeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_recipe_recipepb_recipe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_recipe_recipepb_recipe_proto_goTypes,
		DependencyIndexes: file_recipe_recipepb_recipe_proto_depIdxs,
		MessageInfos:      file_recipe_recipepb_recipe_proto_msgTypes,
	}.Build()
	File_recipe_recipepb_recipe_proto = out.File
	file_recipe_recipepb_recipe_proto_rawDesc = nil
	file_recipe_recipepb_recipe_proto_goTypes = nil
	file_recipe_recipepb_recipe_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RecipeServiceClient is the client API for RecipeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecipeServiceClient interface {
	CreateRecipe(ctx context.Context, in *CreateRecipeRequest, opts ...grpc.CallOption) (*CreateRecipeResponse, error)
	QueryRecipe(ctx context.Context, in *QueryRecipeRequest, opts ...grpc.CallOption) (*QueryRecipeResponse, error)
	UpdateRecipe(ctx context.Context, in *UpdateRecipeRequest, opts ...grpc.CallOption) (*UpdateRecipeResponse, error)
	DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*DeleteRecipeResponse, error)
}

type recipeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRecipeServiceClient(cc grpc.ClientConnInterface) RecipeServiceClient {
	return &recipeServiceClient{cc}
}

func (c *recipeServiceClient) CreateRecipe(ctx context.Context, in *CreateRecipeRequest, opts ...grpc.CallOption) (*CreateRecipeResponse, error) {
	out := new(CreateRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/CreateRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) QueryRecipe(ctx context.Context, in *QueryRecipeRequest, opts ...grpc.CallOption) (*QueryRecipeResponse, error) {
	out := new(QueryRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/QueryRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) UpdateRecipe(ctx context.Context, in *UpdateRecipeRequest, opts ...grpc.CallOption) (*UpdateRecipeResponse, error) {
	out := new(UpdateRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/UpdateRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recipeServiceClient) DeleteRecipe(ctx context.Context, in *DeleteRecipeRequest, opts ...grpc.CallOption) (*DeleteRecipeResponse, error) {
	out := new(DeleteRecipeResponse)
	err := c.cc.Invoke(ctx, "/recipe.RecipeService/DeleteRecipe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecipeServiceServer is the server API for RecipeService service.
type RecipeServiceServer interface {
	CreateRecipe(context.Context, *CreateRecipeRequest) (*CreateRecipeResponse, error)
	QueryRecipe(context.Context, *QueryRecipeRequest) (*QueryRecipeResponse, error)
	UpdateRecipe(context.Context, *UpdateRecipeRequest) (*UpdateRecipeResponse, error)
	DeleteRecipe(context.Context, *DeleteRecipeRequest) (*DeleteRecipeResponse, error)
}

// UnimplementedRecipeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRecipeServiceServer struct {
}

func (*UnimplementedRecipeServiceServer) CreateRecipe(context.Context, *CreateRecipeRequest) (*CreateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) QueryRecipe(context.Context, *QueryRecipeRequest) (*QueryRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) UpdateRecipe(context.Context, *UpdateRecipeRequest) (*UpdateRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRecipe not implemented")
}
func (*UnimplementedRecipeServiceServer) DeleteRecipe(context.Context, *DeleteRecipeRequest) (*DeleteRecipeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRecipe not implemented")
}

func RegisterRecipeServiceServer(s *grpc.Server, srv RecipeServiceServer) {
	s.RegisterService(&_RecipeService_serviceDesc, srv)
}

func _RecipeService_CreateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).CreateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/CreateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).CreateRecipe(ctx, req.(*CreateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_QueryRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).QueryRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/QueryRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).QueryRecipe(ctx, req.(*QueryRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_UpdateRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).UpdateRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/UpdateRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).UpdateRecipe(ctx, req.(*UpdateRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RecipeService_DeleteRecipe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRecipeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecipeServiceServer).DeleteRecipe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recipe.RecipeService/DeleteRecipe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecipeServiceServer).DeleteRecipe(ctx, req.(*DeleteRecipeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RecipeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recipe.RecipeService",
	HandlerType: (*RecipeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecipe",
			Handler:    _RecipeService_CreateRecipe_Handler,
		},
		{
			MethodName: "QueryRecipe",
			Handler:    _RecipeService_QueryRecipe_Handler,
		},
		{
			MethodName: "UpdateRecipe",
			Handler:    _RecipeService_UpdateRecipe_Handler,
		},
		{
			MethodName: "DeleteRecipe",
			Handler:    _RecipeService_DeleteRecipe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recipe/recipepb/recipe.proto",
}
